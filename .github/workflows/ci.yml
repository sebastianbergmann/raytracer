on:
  pull_request: null
  push: null

name: CI

env:
  PHP_VERSION: 8.4
  PHP_INI_VALUES: memory_limit=-1, assert.exception=1, zend.assertions=1, opcache.enable=1, opcache.enable_cli=1, opcache.optimization_level=-1, opcache.jit=1255, opcache.jit_buffer_size=32M

jobs:
  coding-guidelines:
    name: Coding Guidelines

    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: none, iconv, json, phar, tokenizer
          coverage: none
          tools: none

      - name: Run PHP-CS-Fixer
        run: ./tools/php-cs-fixer fix --dry-run --show-progress=dots --using-cache=no --verbose

  static-analysis:
    name: Static Analysis

    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          coverage: none
          tools: none

      - name: Run PHPStan
        run: ./tools/phpstan analyse --no-progress --error-format=github

  unit-tests:
    name: Unit Tests

    needs: static-analysis

    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          ini-values: ${{ env.PHP_INI_VALUES }}
          coverage: none

      - name: Run unit tests with PHPUnit
        run: ./tools/phpunit --testsuite unit

  integration-tests:
    name: Integration Tests

    needs: unit-tests

    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          ini-values: ${{ env.PHP_INI_VALUES }}
          coverage: none

      - name: Run unit tests with PHPUnit
        run: ./tools/phpunit --testsuite integration

  code-coverage:
    name: Code Coverage

    needs: integration-tests

    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          ini-values: ${{ env.PHP_INI_VALUES }}
          coverage: xdebug

      - name: Collect code coverage with PHPUnit
        run: ./tools/phpunit --log-junit test-results.xml --coverage-clover=code-coverage.xml

      - name: Upload test results to Codecov.io
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          disable_search: true
          files: ./test-results.xml

      - name: Upload code coverage data to Codecov.io
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          disable_search: true
          files: ./code-coverage.xml
